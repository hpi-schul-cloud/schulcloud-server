/* tslint:disable */
/* eslint-disable */
/**
 * HPI Schul-Cloud Server API
 * This is v3 of HPI Schul-Cloud Server. Checkout /docs for v1.
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { NewsTargetModel } from './news-target-model';
import { SchoolInfoResponse } from './school-info-response';
import { TargetInfoResponse } from './target-info-response';
import { UserInfoResponse } from './user-info-response';

/**
 * 
 * @export
 * @interface NewsResponse
 */
export interface NewsResponse {
    /**
     * The id of the News entity
     * @type {string}
     * @memberof NewsResponse
     */
    'id': string;
    /**
     * Title of the News entity
     * @type {string}
     * @memberof NewsResponse
     */
    'title': string;
    /**
     * Content of the News entity
     * @type {string}
     * @memberof NewsResponse
     */
    'content': string;
    /**
     * The point in time from when the News entity schould be displayed
     * @type {string}
     * @memberof NewsResponse
     */
    'displayAt': string;
    /**
     * The type of source of the News entity
     * @type {string}
     * @memberof NewsResponse
     */
    'source'?: SourceEnum;
    /**
     * The source description of the News entity
     * @type {string}
     * @memberof NewsResponse
     */
    'sourceDescription'?: string;
    /**
     * 
     * @type {NewsTargetModel}
     * @memberof NewsResponse
     */
    'targetModel': NewsTargetModel;
    /**
     * Specific target id to which the News entity is related
     * @type {string}
     * @memberof NewsResponse
     */
    'targetId': string;
    /**
     * The target object with id and name, could be the school, team, or course name
     * @type {TargetInfoResponse}
     * @memberof NewsResponse
     */
    'target': TargetInfoResponse;
    /**
     * The School ownership
     * @type {SchoolInfoResponse}
     * @memberof NewsResponse
     */
    'school': SchoolInfoResponse;
    /**
     * Reference to the User that created the News entity
     * @type {UserInfoResponse}
     * @memberof NewsResponse
     */
    'creator': UserInfoResponse;
    /**
     * Reference to the User that updated the News entity
     * @type {UserInfoResponse}
     * @memberof NewsResponse
     */
    'updater'?: UserInfoResponse;
    /**
     * The creation timestamp
     * @type {string}
     * @memberof NewsResponse
     */
    'createdAt': string;
    /**
     * The update timestamp
     * @type {string}
     * @memberof NewsResponse
     */
    'updatedAt': string;
    /**
     * List of permissions the current user has for the News entity
     * @type {Array<string>}
     * @memberof NewsResponse
     */
    'permissions': Array<string>;
}

/**
    * @export
    * @enum {string}
    */
export enum SourceEnum {
    Internal = 'internal',
    Rss = 'rss'
}


