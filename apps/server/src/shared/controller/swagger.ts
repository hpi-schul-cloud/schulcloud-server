import { INestApplication } from '@nestjs/common';
import { DocumentBuilder } from '@nestjs/swagger';
import { OpenApiNestFactory } from 'nest-openapi-tools';

/** *********************************************
 * OpenAPI docs setup
 * **********************************************
 * They will be generated by Controller routes
 * and DTOs/Entities passed. Their properties
 * must use @ApiProperty
 */

// build default openapi spec, it contains all registered controllers by default
// DTO's and Entity properties have to use @ApiProperty decorator to add their properties
const config = new DocumentBuilder()
	.addServer('/api/v3/') // add default path as server to have correct urls ald let 'try out' work
	.setTitle('HPI Schul-Cloud Server API')
	.setDescription('This is v3 of HPI Schul-Cloud Server. Checkout /docs for v1.')
	.setVersion('3.0')
	/** set authentication for all routes enabled by default */
	.addBearerAuth({ type: 'http', scheme: 'bearer', bearerFormat: 'JWT' });

export const enableOpenApiDocs = async (app: INestApplication, path: string): Promise<void> => {
	await OpenApiNestFactory.configure(
		app,
		config,
		{
			webServerOptions: {
				enabled: true,
				path,
			},
			fileGeneratorOptions: {
				enabled: true,
				outputFilePath: './openapi.yaml', // or ./openapi.json
			},
			clientGeneratorOptions: {
				enabled: true,
				type: 'typescript-axios',
				outputFolderPath: 'apps/server/test/api-client',
				additionalProperties:
					'apiPackage=clients,modelPackage=models,withoutPrefixEnums=true,withSeparateModelsAndApi=true',
				openApiFilePath: './openapi.yaml', // or ./openapi.json
				skipValidation: true, // optional, false by default
			},
		},
		{
			operationIdFactory: (c: string, method: string) => method,
		}
	);

	// const document = SwaggerModule.createDocument(app, config);
	// SwaggerModule.setup(path, app, document);
};
