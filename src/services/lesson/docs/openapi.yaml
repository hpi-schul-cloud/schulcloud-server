security:
  - jwtBearer: []
info:
  title: HPI Schul-Cloud Lesson Service API
  description:
    This is the API specification for the HPI Schul-Cloud Lesson service.
  contact:
    name: support
    email: info@hpi-schul-cloud.de
  license:
    name: GPL-3.0
    url: 'https://github.com/hpi-schul-cloud/schulcloud-server/blob/master/LICENSE'
  version: 1.0.0
components:
  securitySchemes:
    jwtBearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    lessons:
      description: datatransfer object of a lesson in the schoolcloud
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        date:
          type: string
          format: date-time
        time:
          type: string
          format: date-time
        contents:
          type: array
          items:
            $ref: '#/components/schemas/contents'
        materialIds:
          type: array
          items:
            type: string
            format: '^[0-9a-f]{24}$'
        courseId:
          type: array
          items:
            type: string
            format: '^[0-9a-f]{24}$'
        courseGroupId:
          type: array
          items:
            type: string
            format: '^[0-9a-f]{24}$'
        teamId:
          type: array
          items:
            type: string
            format: '^[0-9a-f]{24}$'
        hidden:
          type: boolean
        shareToken:
          type: string
        isCopyFrom:
          type: string
          format: '^[0-9a-f]{24}$'
        position:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    lessons_list:
      description: a list of paginated lessons
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/lessons'
        total:
          type: integer
        limit:
          type: integer
        skip:
          type: integer
    contents:
      type: object
      properties:
        user:
          type: string
          format: '^[0-9a-f]{24}$'
        component:
          type: string
        title:
          type: string
        content:
          type: object
        hidden:
          type: boolean
    materials:
      type: object
      properties:
        title:
          type: string
        client:
          type: string
        url:
          type: string
        merlinReference:
          type: string

paths:
  /lessons:
    get:
      parameters:
        - description: ID of the course
          in: query
          name: courseId
          schema:
            type: string
        - description: ID of the course group
          in: query
          name: courseGroupId
          schema:
            type: string
        - description: Share Token for the course
          in: query
          name: shareToken
          schema:
            type: string
        - description: Number of results to return
          in: query
          name: $limit
          schema:
            type: integer
        - description: Number of results to skip
          in: query
          name: $skip
          schema:
            type: integer
        - description: Property to sort results
          in: query
          name: $sort
          style: deepObject
          schema:
            type: object
        - description: Query parameters to filter
          in: query
          name: filter
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/lessons'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lessons_list'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Retrieves a list of all resources from the service. Required either courseId, courseGroupId or shareToken to be set.
      summary: ''
      tags:
        - lessons
      security:
        - jwtBearer: []
    post:
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lessons'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Creates a new resource with data.
      summary: ''
      tags:
        - lessons
      security:
        - jwtBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lessons'
  '/lessons/{_id}':
    get:
      parameters:
        - in: path
          name: _id
          description: ID of lessons to return
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lessons'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Retrieves a single resource with the given id from the service.
      summary: ''
      tags:
        - lessons
      security:
        - jwtBearer: []
    put:
      parameters:
        - in: path
          name: _id
          description: ID of lessons to update
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lessons'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Updates the resource identified by id using data.
      summary: ''
      tags:
        - lessons
      security:
        - jwtBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lessons'
    patch:
      parameters:
        - in: path
          name: _id
          description: ID of lessons to update
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lessons'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Updates the resource identified by id using data.
      summary: ''
      tags:
        - lessons
      security:
        - jwtBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lessons'
    delete:
      parameters:
        - in: path
          name: _id
          description: ID of lessons to remove
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lessons'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Removes the resource with id.
      summary: ''
      tags:
        - lessons
      security:
        - jwtBearer: []
  '/lessons/{lessonId}/files':
    get:
      parameters:
        - description: ID of the lesson
          in: path
          name: lessonId
          schema:
            type: string
          required: true
        - description: Share token of the lesson
          in: query
          name: shareToken
          schema:
            type: string
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties: true
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Retrieves a list of files which are included in text-components of a given lesson.
      summary: ''
      tags:
        - lessons
      security:
        - jwtBearer: []
  /lessons/copy:
    post:
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lessons'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Creates a new resource with data.
      summary: ''
      tags:
        - lessons
      security:
        - jwtBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lessonId:
                  type: string
                  format: '^[0-9a-f]{24}$'
                shareToken:
                  type: string
              required:
                - lessonId
  '/lessons/{lessonId}/material':
    post:
      parameters:
        - in: path
          name: lessonId
          schema:
            type: string
          required: true
          description: lessonId parameter
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/materials'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Creates a new resource with data.
      summary: ''
      tags:
        - lessons
      security:
        - jwtBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/materials'
  '/lessons/contents/{type}':
    get:
      parameters:
        - description: type parameter
          in: path
          name: type
          schema:
            type: string
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      format: '^[0-9a-f]{24}$'
                    content:
                      type: object
                  additionalProperties: true
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Retrieve all lesson contents of the given type.
      summary: ''
      tags:
        - lessons
      security:
        - jwtBearer: []

openapi: 3.0.2
tags:
  - name: lessons
    description: A lessons service.
