security:
  - jwtBearer: []
info:
  title: Schul-Cloud News Service API
  description:
    This is the API specification for the Schul-Cloud News service, a service that handles access to news from various scopes (e.g. courses, teams or classes). The service's API offers basic CRUD operations.
    
  contact:
    name: support
    email: info@hpi-schul-cloud.de
  license:
    name: GPL-3.0
    url: 'https://github.com/hpi-schul-cloud/schulcloud-server/blob/master/LICENSE'
  version: 1.0.0
components:
  securitySchemes:
    jwtBearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    news:
      title: News
      type: object
      additionalProperties: false
      properties:
        schoolId:
          type: string
          pattern: '[a-f0-9]{24}'
        title:
          type: string
        content:
          type: string
        displayAt:
          type: string
          format: date
          description: the news will become public at this date. Defaults to be the same as creation date.
        creatorId:
          type: string
          pattern: '[a-f0-9]{24}'
          description: id of the user that created the news
          readOnly: true
        createdAt:
          type: string
          format: date
          readOnly: true
        updaterId:
          type: string
          pattern: '[a-f0-9]{24}'
          description: id of the user that last updated the news
          readOnly: true
        updatedAt:
          type: string
          format: date
          readOnly: true
        target:
          type: string
          pattern: '[a-f0-9]{24}'
          description: 'id of the scope the news belongs to.If no target is given, the news will belong to the school.'
        targetModel:
          type: string
          enum:
            - courses
            - teams
            - class
          description: the type of the scope the news belongs to.required if a target is given
        source:
          type: string
          default: internal
          enum:
            - internal
            - rss
          readOnly: true
        externalId:
          type: string
          description: guid of an rss feed
          readOnly: true
        sourceDescription:
          type: string
          readOnly: true
    news_list:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/news'
        total:
          type: integer
        limit:
          type: integer
        skip:
          type: integer
    newsModel:
      title: NewsModel
    newsModel_list:
      type: object
paths:
  /news:
    get:
      parameters:
        - description: Number of results to return
          in: query
          name: $limit
          schema:
            type: integer
        - description: Number of results to skip
          in: query
          name: $skip
          schema:
            type: integer
        - description: Property to sort results
          in: query
          name: $sort
          style: deepObject
          schema:
            type: object
        - description: Query parameters to filter
          in: query
          name: filter
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/news'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/news_list'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: 'Find all news the user has access to, optionally filtered by scope.'
      summary: ''
      tags:
        - news
      security: []
    post:
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/news'
        '401':
          description: not authenticated
        '403':
          description: not authorized
        '500':
          description: general error
      description: Create a new news of a certain scope.
      summary: ''
      tags:
        - news
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/news'
  '/news/{id}':
    get:
      parameters:
        - in: path
          name: id
          description: ID of news to return
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/news'
        '401':
          description: not authenticated
        '403':
          description: not authorized
        '404':
          description: not found
        '500':
          description: general error
      description: Returns the news specified by id.
      summary: ''
      tags:
        - news
      security: []
    put:
      parameters:
        - in: path
          name: id
          description: ID of news to update
          schema:
            type: integer
          required: true
      responses:
        '201':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/news'
        '401':
          description: not authenticated
        '403':
          description: not authorized
        '404':
          description: not found
        '500':
          description: general error
      description: Replaces the news specified by id.
      summary: ''
      tags:
        - news
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/news'
    patch:
      parameters:
        - in: path
          name: id
          description: ID of news to update
          schema:
            type: integer
          required: true
      responses:
        '201':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/news'
        '401':
          description: not authenticated
        '403':
          description: not authorized
        '404':
          description: not found
        '500':
          description: general error
      description: patches the news specified by id.
      summary: ''
      tags:
        - news
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/news'
    delete:
      parameters:
        - in: path
          name: id
          description: ID of news to remove
          schema:
            type: integer
          required: true
      responses:
        '201':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/news'
        '401':
          description: not authenticated
        '403':
          description: not authorized
        '404':
          description: not found
        '500':
          description: general error
      description: Removes the news specified by id.
      summary: ''
      tags:
        - news
      security: []
  /newsModel:
    get:
      parameters:
        - description: Number of results to return
          in: query
          name: $limit
          schema:
            type: integer
        - description: Number of results to skip
          in: query
          name: $skip
          schema:
            type: integer
        - description: Property to sort results
          in: query
          name: $sort
          style: deepObject
          schema:
            type: object
        - description: Query parameters to filter
          in: query
          name: filter
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/newsModel'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/newsModel_list'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Retrieves a list of all resources from the service.
      summary: ''
      tags:
        - newsModel
      security: []
    post:
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/newsModel'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Creates a new resource with data.
      summary: ''
      tags:
        - newsModel
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newsModel'
  '/newsModel/{_id}':
    get:
      parameters:
        - in: path
          name: _id
          description: ID of newsModel to return
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/newsModel'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Retrieves a single resource with the given id from the service.
      summary: ''
      tags:
        - newsModel
      security: []
    put:
      parameters:
        - in: path
          name: _id
          description: ID of newsModel to update
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/newsModel'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Updates the resource identified by id using data.
      summary: ''
      tags:
        - newsModel
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newsModel'
    patch:
      parameters:
        - in: path
          name: _id
          description: ID of newsModel to update
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/newsModel'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Updates the resource identified by id using data.
      summary: ''
      tags:
        - newsModel
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newsModel'
    delete:
      parameters:
        - in: path
          name: _id
          description: ID of newsModel to remove
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/newsModel'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Removes the resource with id.
      summary: ''
      tags:
        - newsModel
      security: []
openapi: 3.0.2
tags:
  - name: news
    description: A service that handles access to news from various scopes.
  - name: newsModel
    description: A newsModel service

