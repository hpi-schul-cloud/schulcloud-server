security:
  - jwtBearer: []
info:
  title: Schul-Cloud School Service API
  description:
    This is the API specification for the Schul-Cloud School service.
    
  contact:
    name: support
    email: info@hpi-schul-cloud.de
  license:
    name: GPL-3.0
    url: 'https://github.com/hpi-schul-cloud/schulcloud-server/blob/master/LICENSE'
  version: 1.0.0
components:
  securitySchemes:
    jwtBearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    years:
      type: object
      properties:
        _id:
          type: string
          pattern: '[a-f0-9]{24}'
        __v:
          type: integer
        name:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
    schools:
      description: datatransfer object of a school in the schoolcloud
      type: object
      properties:
        _id:
          type: string
          pattern: '[a-f0-9]{24}'
        id:
          type: string
          pattern: '[a-f0-9]{24}'
        name:
          type: string
        fileStorageType:
          type: string
          enum: [awsS3]
        systems:
          type: array
          items:
            type: string
            pattern: '[a-f0-9]{24}'
        updatedAt:
          type: string
          format: date
        createdAt:
          type: string
          format: date
        __v:
          type: string
        currentYear:
          type: string
          pattern: '[a-f0-9]{24}'
        purpose:
          type: string
        permissions:
          type: object
          description: object containing school specific permission overwrites
        inMaintenance:
          type: boolean
        documentBaseDir:
          type: string
        isExternal:
          type: string
        isTeamCreationByStudentsEnabled:
          type: boolean
        years:
          type: object
          properties:
            schoolYears:
              type: array
              items:
                $ref: '#/components/schemas/years'
            activeYear:
              $ref: '#/components/schemas/years'
            defaultYear:
              $ref: '#/components/schemas/years'
            nextYear:
              $ref: '#/components/schemas/years'
            lastYear:
              $ref: '#/components/schemas/years'
        
    schools_list:
      description: a list of paginated schools
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/schools'
        total:
          type: integer
        limit:
          type: integer
        skip:
          type: integer
paths:
  /schools:
    get:
      parameters:
        - description: Number of results to return
          in: query
          name: $limit
          schema:
            type: integer
        - description: Number of results to skip
          in: query
          name: $skip
          schema:
            type: integer
        - description: Property to sort results
          in: query
          name: $sort
          style: deepObject
          schema:
            type: object
        - description: Query parameters to filter
          in: query
          name: filter
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/schools'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schools_list'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Retrieves a list of all schools.
      summary: ''
      tags:
        - schools
      security: []
  '/schools/{_id}':
    get:
      parameters:
        - in: path
          name: _id
          description: ID of schools to return
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schools'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Retrieves a single resource with the given id from the service.
      summary: ''
      tags:
        - schools
      security: []
    put:
      parameters:
        - in: path
          name: _id
          description: ID of schools to update
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schools'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Updates the resource identified by id using data.
      summary: ''
      tags:
        - schools
      security:
        - jwtBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schools'
    patch:
      parameters:
        - in: path
          name: _id
          description: ID of schools to update
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schools'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Updates the resource identified by id using data.
      summary: ''
      tags:
        - schools
      security:
        - jwtBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schools'
openapi: 3.0.2
tags:
  - name: schools
    description: A schools service.
