security:
  - jwtBearer: []
info:
  title: Schul-Cloud User Group Service API
  description:
    This is the API specification for the Schul-Cloud User Group service.
    
  contact:
    name: support
    email: info@hpi-schul-cloud.de
  license:
    name: GPL-3.0
    url: 'https://github.com/hpi-schul-cloud/schulcloud-server/blob/master/LICENSE'
  version: 1.0.0
components:
  securitySchemes:
    jwtBearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    copy:
      description: TODO
    share:
      description: TODO
    share_list:
      description: TODO
    courseModel:
      description: TODO
    courseModel_list:
      description: TODO
    courses:
      description: TODO
    courses_list:
      description: TODO
    courseGroupModel:
      description: TODO
    courseGroupModel_list:
      description: TODO
    courseGroups:
      description: TODO
    courseGroups_list:
      description: TODO
    classModel:
      description: TODO
    classModel_list:
      description: TODO
    classes:
      description: TODO
    classes_list:
      description: TODO
    grades:
      description: TODO
    grades_list:
      description: TODO
    successor:
      description: TODO
    successor_list:
      description: TODO
    scopeId:
      description: TODO
    scopeId_list:
      description: TODO

paths:
  /courses/copy:
    post:
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/copy'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Creates a new resource with data.
      summary: ''
      tags:
        - courses
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/copy'
  /courses/share:
    get:
      parameters:
        - description: Number of results to return
          in: query
          name: $limit
          schema:
            type: integer
        - description: Number of results to skip
          in: query
          name: $skip
          schema:
            type: integer
        - description: Property to sort results
          in: query
          name: $sort
          style: deepObject
          schema:
            type: object
        - description: Query parameters to filter
          in: query
          name: filter
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/share'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/share_list'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Retrieves a list of all resources from the service.
      summary: ''
      tags:
        - courses
      security: []
    post:
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/share'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Creates a new resource with data.
      summary: ''
      tags:
        - courses
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/share'
  '/courses/share/{id}':
    get:
      parameters:
        - in: path
          name: id
          description: ID of share to return
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/share'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Retrieves a single resource with the given id from the service.
      summary: ''
      tags:
        - courses
      security: []
  /courseModel:
    get:
      parameters:
        - description: Number of results to return
          in: query
          name: $limit
          schema:
            type: integer
        - description: Number of results to skip
          in: query
          name: $skip
          schema:
            type: integer
        - description: Property to sort results
          in: query
          name: $sort
          style: deepObject
          schema:
            type: object
        - description: Query parameters to filter
          in: query
          name: filter
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/courseModel'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courseModel_list'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Retrieves a list of all resources from the service.
      summary: ''
      tags:
        - courseModel
      security: []
    post:
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courseModel'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Creates a new resource with data.
      summary: ''
      tags:
        - courseModel
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/courseModel'
  '/courseModel/{_id}':
    get:
      parameters:
        - in: path
          name: _id
          description: ID of courseModel to return
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courseModel'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Retrieves a single resource with the given id from the service.
      summary: ''
      tags:
        - courseModel
      security: []
    put:
      parameters:
        - in: path
          name: _id
          description: ID of courseModel to update
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courseModel'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Updates the resource identified by id using data.
      summary: ''
      tags:
        - courseModel
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/courseModel'
    patch:
      parameters:
        - in: path
          name: _id
          description: ID of courseModel to update
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courseModel'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Updates the resource identified by id using data.
      summary: ''
      tags:
        - courseModel
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/courseModel'
    delete:
      parameters:
        - in: path
          name: _id
          description: ID of courseModel to remove
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courseModel'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Removes the resource with id.
      summary: ''
      tags:
        - courseModel
      security: []
  /courses:
    get:
      parameters:
        - description: Number of results to return
          in: query
          name: $limit
          schema:
            type: integer
        - description: Number of results to skip
          in: query
          name: $skip
          schema:
            type: integer
        - description: Property to sort results
          in: query
          name: $sort
          style: deepObject
          schema:
            type: object
        - description: Query parameters to filter
          in: query
          name: filter
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/courses'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courses_list'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Retrieves a list of all resources from the service.
      summary: ''
      tags:
        - courses
      security: []
    post:
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courses'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Creates a new resource with data.
      summary: ''
      tags:
        - courses
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/courses'
  '/courses/{id}':
    get:
      parameters:
        - in: path
          name: id
          description: ID of courses to return
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courses'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Retrieves a single resource with the given id from the service.
      summary: ''
      tags:
        - courses
      security: []
    put:
      parameters:
        - in: path
          name: id
          description: ID of courses to update
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courses'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Updates the resource identified by id using data.
      summary: ''
      tags:
        - courses
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/courses'
    patch:
      parameters:
        - in: path
          name: id
          description: ID of courses to update
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courses'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Updates the resource identified by id using data.
      summary: ''
      tags:
        - courses
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/courses'
    delete:
      parameters:
        - in: path
          name: id
          description: ID of courses to remove
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courses'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Removes the resource with id.
      summary: ''
      tags:
        - courses
      security: []
  /courseGroupModel:
    get:
      parameters:
        - description: Number of results to return
          in: query
          name: $limit
          schema:
            type: integer
        - description: Number of results to skip
          in: query
          name: $skip
          schema:
            type: integer
        - description: Property to sort results
          in: query
          name: $sort
          style: deepObject
          schema:
            type: object
        - description: Query parameters to filter
          in: query
          name: filter
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/courseGroupModel'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courseGroupModel_list'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Retrieves a list of all resources from the service.
      summary: ''
      tags:
        - courseGroupModel
      security: []
    post:
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courseGroupModel'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Creates a new resource with data.
      summary: ''
      tags:
        - courseGroupModel
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/courseGroupModel'
  '/courseGroupModel/{_id}':
    get:
      parameters:
        - in: path
          name: _id
          description: ID of courseGroupModel to return
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courseGroupModel'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Retrieves a single resource with the given id from the service.
      summary: ''
      tags:
        - courseGroupModel
      security: []
    put:
      parameters:
        - in: path
          name: _id
          description: ID of courseGroupModel to update
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courseGroupModel'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Updates the resource identified by id using data.
      summary: ''
      tags:
        - courseGroupModel
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/courseGroupModel'
    patch:
      parameters:
        - in: path
          name: _id
          description: ID of courseGroupModel to update
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courseGroupModel'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Updates the resource identified by id using data.
      summary: ''
      tags:
        - courseGroupModel
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/courseGroupModel'
    delete:
      parameters:
        - in: path
          name: _id
          description: ID of courseGroupModel to remove
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courseGroupModel'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Removes the resource with id.
      summary: ''
      tags:
        - courseGroupModel
      security: []
  /courseGroups:
    get:
      parameters:
        - description: Number of results to return
          in: query
          name: $limit
          schema:
            type: integer
        - description: Number of results to skip
          in: query
          name: $skip
          schema:
            type: integer
        - description: Property to sort results
          in: query
          name: $sort
          style: deepObject
          schema:
            type: object
        - description: Query parameters to filter
          in: query
          name: filter
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/courseGroups'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courseGroups_list'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Retrieves a list of all resources from the service.
      summary: ''
      tags:
        - courseGroups
      security: []
    post:
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courseGroups'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Creates a new resource with data.
      summary: ''
      tags:
        - courseGroups
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/courseGroups'
  '/courseGroups/{id}':
    get:
      parameters:
        - in: path
          name: id
          description: ID of courseGroups to return
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courseGroups'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Retrieves a single resource with the given id from the service.
      summary: ''
      tags:
        - courseGroups
      security: []
    put:
      parameters:
        - in: path
          name: id
          description: ID of courseGroups to update
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courseGroups'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Updates the resource identified by id using data.
      summary: ''
      tags:
        - courseGroups
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/courseGroups'
    patch:
      parameters:
        - in: path
          name: id
          description: ID of courseGroups to update
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courseGroups'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Updates the resource identified by id using data.
      summary: ''
      tags:
        - courseGroups
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/courseGroups'
    delete:
      parameters:
        - in: path
          name: id
          description: ID of courseGroups to remove
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courseGroups'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Removes the resource with id.
      summary: ''
      tags:
        - courseGroups
      security: []
  /classModel:
    get:
      parameters:
        - description: Number of results to return
          in: query
          name: $limit
          schema:
            type: integer
        - description: Number of results to skip
          in: query
          name: $skip
          schema:
            type: integer
        - description: Property to sort results
          in: query
          name: $sort
          style: deepObject
          schema:
            type: object
        - description: Query parameters to filter
          in: query
          name: filter
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/classModel'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/classModel_list'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Retrieves a list of all resources from the service.
      summary: ''
      tags:
        - classModel
      security: []
    post:
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/classModel'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Creates a new resource with data.
      summary: ''
      tags:
        - classModel
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/classModel'
  '/classModel/{_id}':
    get:
      parameters:
        - in: path
          name: _id
          description: ID of classModel to return
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/classModel'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Retrieves a single resource with the given id from the service.
      summary: ''
      tags:
        - classModel
      security: []
    put:
      parameters:
        - in: path
          name: _id
          description: ID of classModel to update
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/classModel'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Updates the resource identified by id using data.
      summary: ''
      tags:
        - classModel
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/classModel'
    patch:
      parameters:
        - in: path
          name: _id
          description: ID of classModel to update
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/classModel'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Updates the resource identified by id using data.
      summary: ''
      tags:
        - classModel
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/classModel'
    delete:
      parameters:
        - in: path
          name: _id
          description: ID of classModel to remove
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/classModel'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Removes the resource with id.
      summary: ''
      tags:
        - classModel
      security: []
  /classes:
    get:
      parameters:
        - description: Number of results to return
          in: query
          name: $limit
          schema:
            type: integer
        - description: Number of results to skip
          in: query
          name: $skip
          schema:
            type: integer
        - description: Property to sort results
          in: query
          name: $sort
          style: deepObject
          schema:
            type: object
        - description: Query parameters to filter
          in: query
          name: filter
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/classes'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/classes_list'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Retrieves a list of all resources from the service.
      summary: ''
      tags:
        - classes
      security: []
    post:
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/classes'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Creates a new resource with data.
      summary: ''
      tags:
        - classes
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/classes'
  '/classes/{id}':
    get:
      parameters:
        - in: path
          name: id
          description: ID of classes to return
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/classes'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Retrieves a single resource with the given id from the service.
      summary: ''
      tags:
        - classes
      security: []
    put:
      parameters:
        - in: path
          name: id
          description: ID of classes to update
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/classes'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Updates the resource identified by id using data.
      summary: ''
      tags:
        - classes
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/classes'
    patch:
      parameters:
        - in: path
          name: id
          description: ID of classes to update
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/classes'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Updates the resource identified by id using data.
      summary: ''
      tags:
        - classes
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/classes'
    delete:
      parameters:
        - in: path
          name: id
          description: ID of classes to remove
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/classes'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Removes the resource with id.
      summary: ''
      tags:
        - classes
      security: []
  /grades:
    get:
      parameters:
        - description: Number of results to return
          in: query
          name: $limit
          schema:
            type: integer
        - description: Number of results to skip
          in: query
          name: $skip
          schema:
            type: integer
        - description: Property to sort results
          in: query
          name: $sort
          style: deepObject
          schema:
            type: object
        - description: Query parameters to filter
          in: query
          name: filter
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/grades'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grades_list'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Retrieves a list of all resources from the service.
      summary: ''
      tags:
        - grades
      security: []
    post:
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grades'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Creates a new resource with data.
      summary: ''
      tags:
        - grades
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/grades'
  '/grades/{_id}':
    get:
      parameters:
        - in: path
          name: _id
          description: ID of grades to return
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grades'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Retrieves a single resource with the given id from the service.
      summary: ''
      tags:
        - grades
      security: []
    put:
      parameters:
        - in: path
          name: _id
          description: ID of grades to update
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grades'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Updates the resource identified by id using data.
      summary: ''
      tags:
        - grades
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/grades'
    patch:
      parameters:
        - in: path
          name: _id
          description: ID of grades to update
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grades'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Updates the resource identified by id using data.
      summary: ''
      tags:
        - grades
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/grades'
    delete:
      parameters:
        - in: path
          name: _id
          description: ID of grades to remove
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grades'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Removes the resource with id.
      summary: ''
      tags:
        - grades
      security: []
  /classes/successor:
    get:
      parameters:
        - description: Number of results to return
          in: query
          name: $limit
          schema:
            type: integer
        - description: Number of results to skip
          in: query
          name: $skip
          schema:
            type: integer
        - description: Property to sort results
          in: query
          name: $sort
          style: deepObject
          schema:
            type: object
        - description: Query parameters to filter
          in: query
          name: filter
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/successor'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successor_list'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Retrieves a list of all resources from the service.
      summary: ''
      tags:
        - classes
      security: []
  '/classes/successor/{id}':
    get:
      parameters:
        - in: path
          name: id
          description: ID of successor to return
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successor'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Retrieves a single resource with the given id from the service.
      summary: ''
      tags:
        - classes
      security: []
  '/users/{scopeId}/courses':
    get:
      parameters:
        - in: path
          name: scopeId
          schema:
            type: string
          required: true
          description: scopeId parameter
        - description: Number of results to return
          in: query
          name: $limit
          schema:
            type: integer
        - description: Number of results to skip
          in: query
          name: $skip
          schema:
            type: integer
        - description: Property to sort results
          in: query
          name: $sort
          style: deepObject
          schema:
            type: object
        - description: Query parameters to filter
          in: query
          name: filter
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/scopeId'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scopeId_list'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Retrieves a list of all resources from the service.
      summary: ''
      tags:
        - users
      security: []
  '/courses/{scopeId}/userPermissions':
    get:
      parameters:
        - in: path
          name: scopeId
          schema:
            type: string
          required: true
          description: scopeId parameter
        - description: Number of results to return
          in: query
          name: $limit
          schema:
            type: integer
        - description: Number of results to skip
          in: query
          name: $skip
          schema:
            type: integer
        - description: Property to sort results
          in: query
          name: $sort
          style: deepObject
          schema:
            type: object
        - description: Query parameters to filter
          in: query
          name: filter
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/scopeId'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scopeId_list'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Retrieves a list of all resources from the service.
      summary: ''
      tags:
        - courses
      security: []
  '/courses/{scopeId}/userPermissions/{id}':
    get:
      parameters:
        - in: path
          name: scopeId
          schema:
            type: string
          required: true
          description: scopeId parameter
        - in: path
          name: id
          description: 'ID of :scopeId to return'
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scopeId'
        '401':
          description: not authenticated
        '404':
          description: not found
        '500':
          description: general error
      description: Retrieves a single resource with the given id from the service.
      summary: ''
      tags:
        - courses
      security: []
  '/courses/{scopeId}/members':
    get:
      parameters:
        - in: path
          name: scopeId
          schema:
            type: string
          required: true
          description: scopeId parameter
        - description: Number of results to return
          in: query
          name: $limit
          schema:
            type: integer
        - description: Number of results to skip
          in: query
          name: $skip
          schema:
            type: integer
        - description: Property to sort results
          in: query
          name: $sort
          style: deepObject
          schema:
            type: object
        - description: Query parameters to filter
          in: query
          name: filter
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/scopeId'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scopeId_list'
        '401':
          description: not authenticated
        '500':
          description: general error
      description: Retrieves a list of all resources from the service.
      summary: ''
      tags:
        - courses
      security: []
openapi: 3.0.2
tags:
  - name: courses
    description: A courses service.
  - name: courseModel
    description: A courseModel service.
  - name: courseGroupModel
    description: A courseGroupModel service.
  - name: courseGroups
    description: A courseGroups service.
  - name: classModel
    description: A classModel service.
  - name: classes
    description: A classes service.
  - name: grades
    description: A grades service.
  - name: users
    description: A users service.
    