---
name: push workflow

on:
  push:
    branches-ignore:
      - dependabot/**

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Docker meta Service Name
        id: docker_meta_img
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch,enable=false,priority=600
            type=sha,enable=true,priority=600,prefix=

      - name: Log into registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: test image exists
        run: |
         mkdir -p ~/.docker 
         echo '{"experimental": "enabled"}' >> ~/.docker/config.json
         echo "IMAGE_EXISTS=$(docker manifest inspect ghcr.io/${{ github.repository }}:${{ github.sha }} > /dev/null && echo 1 || echo 0)" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        if: ${{ env.IMAGE_EXISTS == 0 }}
        uses: docker/setup-buildx-action@v1

      - name: Build and push ${{ github.repository }}
        if: ${{ env.IMAGE_EXISTS == 0 }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ github.sha }}
          labels: ${{ steps.docker_meta_img.outputs.labels }}
          
  branch_name:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.extract_branch.outputs.branch }}
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

  deploy:
    needs:
      - build_and_push
      - branch_name
    uses: hpi-schul-cloud/dof_app_deploy/.github/workflows/deploy.yml@main
    with:
      branch: ${{ needs.branch_name.outputs.branch }}
    secrets:
      token: ${{ secrets.GITHUB_TOKEN }}
      DEV_VAULT: ${{ secrets.DEV_VAULT }}
      DEV_KUBE_CONFIG: ${{ secrets.DEV_KUBE_CONFIG }}
      ETHERPAD_API_KEY: ${{ secrets.ETHERPAD_API_KEY }}
  
  deploy-successful:
    needs:
      - deploy
    runs-on: ubuntu-latest
    steps:
      - run: echo "deploy was successful"

  end-to-end-tests:
    needs:
      - build_and_push
      - branch_name
    uses: hpi-schul-cloud/end-to-end-tests/.github/workflows/e2e_call.yml@main
    with:
      ref: ${{ github.ref }}

  test-successful:
    runs-on: ubuntu-latest
    needs:
      - end-to-end-tests
    steps:
      - run: echo "Test was successful"
    
