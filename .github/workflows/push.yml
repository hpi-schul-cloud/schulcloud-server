---
name: push workflow

on:
  push:
    branches-ignore:
      - dependabot/**

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Docker meta Service Name
        id: docker_meta_img
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch,enable=false,priority=600
            type=sha,enable=true,priority=600,prefix=

      - name: Log into registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_DOCKER_USERNAME }}
          password: ${{ secrets.GHCR_DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push ${{ github.repository }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ github.sha }}
          labels: ${{ steps.docker_meta_img.outputs.labels }}

  dispatch:
    runs-on: ubuntu-latest
    needs:
      - build_and_push
    steps:
      - uses: actions/checkout@v2
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: hpi-schul-cloud/dof_app_deploy
          event-type: dev-deploy
          client-payload: '{"branch": "${{ steps.extract_branch.outputs.branch}}" }'

  end-to-end-tests:
    runs-on: ubuntu-latest
    needs:
      - build_and_push
    steps:
      - uses: actions/checkout@v2
      - name: Set BRANCH_NAME on push
        run: |
          branch_name=${GITHUB_REF#refs/*/}
          echo "BRANCH_NAME=$branch_name" >> $GITHUB_ENV
      - name: run git change
        run: |
          git config --global url."https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"
          git config --global url."https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "ssh://git@github.com/"
          git config --global url."https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "git@github.com:"
      - name: execute tests
        env:
          DOCKER_ID: ${{ secrets.DOCKER_ID }}
          MY_DOCKER_PASSWORD: ${{ secrets.MY_DOCKER_PASSWORD }}
        run: curl "https://raw.githubusercontent.com/hpi-schul-cloud/end-to-end-tests/main/scripts/ci/fetch.github.sh" | bash
      - uses: actions/upload-artifact@v2
        name: upload results
        if: always()
        with:
          name: report
          path: end-to-end-tests/reports